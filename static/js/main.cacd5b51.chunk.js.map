{"version":3,"sources":["components/SubmitMaterial.js","App.js","reportWebVitals.js","index.js"],"names":["Main","styled","div","AllContainer","CostReport","MainContent","Materials","MaterialForm","ColorPallete","input","ColorPalleteButtonContainer","ColorPalleteInnerButtonContainer","ColorPalleteButton","MaterialContainer","ButtonContainer","AddEditMaterial","button","CostText","Cost","MaterialList","MaterialItem","MaterialNameContainer","MaterialColorContainer","MaterialItemsColor","MaterialVolumeContainer","DeleteContainer","StyledTextField","TextField","SubmitMaterial","useState","cost","setCost","lastCost","setLastCost","totalCost","setTotalCost","color","setColor","Date","toISOString","split","date","setDate","materialName","setMaterialName","volume","setVolume","material","setMaterial","lastIndex","setLastIndex","open","setOpen","textColor","setTextColor","useEffect","isColor","slice","replace","length","red","green","blue","hsp","Math","sqrt","emptyFields","handleClose","negateTotalCost","tempcost","subtractTotalCost","console","log","addTotalCost","parseFloat","toFixed","max","toString","currentCost","editMaterialContent","index","document","getElementById","style","backgroundColor","tempMaterial","tempLastMaterial","name","changeLastIndex","map","item","key","id","onClick","splice","background","deleteMaterialItem","Tooltip","title","placement","tempMat","editItems","tempCost","addItems","label","variant","onChange","e","target","value","type","InputLabelProps","shrink","isColorPallet","click","colorPalleteOnload","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cacd5b51.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PaletteIcon from \"@material-ui/icons/Palette\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport SwapHorizontalCircleRoundedIcon from \"@material-ui/icons/SwapHorizontalCircleRounded\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst Main = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst AllContainer = styled.div`\r\n  position: absolute;\r\n  display: grid;\r\n  grid-template-rows: auto auto;\r\n  row-gap: 10px;\r\n`;\r\n\r\n//\r\nconst CostReport = styled.div`\r\n  box-shadow: 0 1px 3px rgb(0 0 0/12%), 0 1px 2px rgb(0 0 0/24%);\r\n  top: 20%;\r\n  background-color: #e6ecfc;\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 4px;\r\n  margin-right: auto;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  column-gap: 10px;\r\n  top: 200px;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Materials = styled.div`\r\n  box-shadow: 0 1px 3px rgb(0 0 0/12%), 0 1px 2px rgb(0 0 0/24%);\r\n  width: 100%;\r\n  height: 285px;\r\n  min-width: 250px;\r\n  background-color: #e8bcc4;\r\n  border-radius: 4px 0px 0px 4px;\r\n`;\r\n\r\nconst MaterialForm = styled.div`\r\n  box-shadow: 0 1px 3px rgb(0 0 0/12%), 0 1px 2px rgb(0 0 0/24%);\r\n  width: 500px;\r\n  height: 285px;\r\n  background-color: #f7e3eb;\r\n  border-radius: 4px;\r\n  margin-left: 10px;\r\n  padding: 0px 30px;\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  gap: 20px;\r\n  align-content: center;\r\n`;\r\n\r\nconst ColorPallete = styled.input`\r\n  background-color: transparent;\r\n  border-color: transparent;\r\n  width: 0px;\r\n  height: 0px;\r\n  align-items: center;\r\n  position: absolute;\r\n  bottom: 20px;\r\n  left: 20px;\r\n`;\r\n\r\nconst ColorPalleteButtonContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-row: 2/4;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ColorPalleteInnerButtonContainer = styled.div`\r\n  border: dashed 1px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 70px;\r\n  height: 70px;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ColorPalleteButton = styled.div`\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 600;\r\n  transition-timing-function: ease-in;\r\n  transition: all 0.5s;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MaterialContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DeleteMaterial = styled.button`\r\n  box-shadow: 0 1px 3px rgb(0 0 0/12%), 0 1px 2px rgb(0 0 0/24%);\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0px 0px 0px 3px;\r\n  background-color: #cf9388;\r\n  padding: 20px;\r\n  width: 100%;\r\n  font-weight: 600;\r\n`;\r\nconst AddEditMaterial = styled.button`\r\n  box-shadow: 0 1px 3px rgb(0 0 0/12%), 0 1px 2px rgb(0 0 0/24%);\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0px 0px 3px 0px;\r\n  background-color: #b2b4be;\r\n  padding: 20px;\r\n  width: 100%;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition-timing-function: ease-in;\r\n  transition: all 0.5s;\r\n  :hover {\r\n    background: #bebcb6;\r\n  }\r\n`;\r\n\r\nconst CostText = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Cost = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst MaterialList = styled.div`\r\n  overflow-y: auto;\r\n  max-height: 288px;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MaterialItem = styled.div`\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  display: grid;\r\n  grid-template-columns: 50px auto 40px;\r\n  grid-template-rows: auto auto;\r\n  grid-template-areas:\r\n    \"color name delete\"\r\n    \"color volume delete\";\r\n  column-gap: 10px;\r\n\r\n  :hover {\r\n    background: #b2b4be;\r\n  }\r\n`;\r\n\r\nconst MaterialNameContainer = styled.div`\r\n  grid-area: name;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst MaterialColorContainer = styled.div`\r\n  grid-area: color;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MaterialItemsColor = styled.div`\r\n  border: dashed 1px;\r\n  border-radius: 50%;\r\n  width: 25px;\r\n  height: 25px;\r\n`;\r\n\r\nconst MaterialVolumeContainer = styled.div`\r\n  grid-area: volume;\r\n  font-size: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst DeleteContainer = styled.div`\r\n  grid-area: delete;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  input {\r\n    color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  label {\r\n    color: rgba(0, 0, 0, 0.5);\r\n  }\r\n  label.Mui-focused {\r\n    color: black;\r\n  }\r\n  .MuiInputBase-root {\r\n    color: black;\r\n  }\r\n  .MuiOutlinedInput-root {\r\n    fieldset {\r\n      border-color: rgba(0, 0, 0, 0.5);\r\n      color: black;\r\n    }\r\n    &:hover fieldset {\r\n      border-color: black;\r\n      border-width: 2px;\r\n      color: black;\r\n    }\r\n    &.Mui-focused fieldset {\r\n      border-color: black;\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SubmitMaterial() {\r\n  const [cost, setCost] = useState(\"\");\r\n  const [lastCost, setLastCost] = useState(null);\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [color, setColor] = useState(\"#504a49\");\r\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\r\n  const [materialName, setMaterialName] = useState(\"\");\r\n  const [volume, setVolume] = useState(\"\");\r\n  const [material, setMaterial] = useState([]);\r\n  const [lastIndex, setLastIndex] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [textColor, setTextColor] = useState(\"black\");\r\n\r\n  //it is calculated if the color chosed from color pallete is light or dark\r\n  //if the color is light (hsp>127.5) color text is changes to black\r\n  //if the color is dark (else) color text is changed to white\r\n  useEffect(() => {\r\n    let isColor = +(\r\n      \"0x\" + color.slice(1).replace(color.length < 5 && /./g, \"$&$&\")\r\n    );\r\n\r\n    let red = isColor >> 16;\r\n    let green = (isColor >> 8) & 255;\r\n    let blue = isColor & 255;\r\n\r\n    let hsp = Math.sqrt(\r\n      0.299 * (red * red) + 0.587 * (green * green) + 0.114 * (blue * blue)\r\n    );\r\n\r\n    if (hsp > 127.5) {\r\n      setTextColor(\"black\");\r\n    } else {\r\n      setTextColor(\"white\");\r\n    }\r\n  }, [color]);\r\n\r\n  //onClick event: when color div is clicked, html color picker is opened\r\n  const colorPalleteOnload = () => {\r\n    const isColorPallet = document.getElementById(\"colorPallete\");\r\n    if (isColorPallet) {\r\n      isColorPallet.click();\r\n    }\r\n  };\r\n\r\n  //if material cost, name and volume field are not empty, their value besides color and date\r\n  //are added to \"material\" state and totalCost is updated to the new value. All the fields\r\n  //are then become empty.\r\n  const addItems = () => {\r\n    if (\r\n      cost !== null &&\r\n      cost !== \"\" &&\r\n      materialName !== null &&\r\n      materialName !== \"\" &&\r\n      volume !== null &&\r\n      volume !== \"\" &&\r\n      lastIndex == null\r\n    ) {\r\n      let tempCost = cost;\r\n      setMaterial([\r\n        ...material,\r\n        {\r\n          name: materialName,\r\n          cost: cost,\r\n          volume: volume,\r\n          color: color,\r\n          date: date,\r\n        },\r\n      ]);\r\n      addTotalCost(totalCost, tempCost);\r\n      emptyFields();\r\n    }\r\n  };\r\n\r\n  //make the fileds of material form empty\r\n  const emptyFields = () => {\r\n    setMaterialName(\"\");\r\n    setCost(\"\");\r\n    setVolume(\"\");\r\n    setDate(new Date().toISOString().split(\"T\")[0]);\r\n    setColor(\"#504a49\");\r\n    setLastIndex(null);\r\n    setLastCost(null);\r\n  };\r\n\r\n  //when \"edit\" button is clicked, every changes in the form is reflected, background color\r\n  //of the item is removed to show that the item is not selected anymore, if cost is also changed,\r\n  //totalcost is also updated, and fields of the material form become empty. if no item is selected,\r\n  //(lastIndex==null) a dialog box is shown to inform the user to choose an item to edit.\r\n  const editItems = () => {\r\n    if (lastIndex !== null) {\r\n      let tempMat = [...material];\r\n      tempMat[lastIndex].name = materialName;\r\n      tempMat[lastIndex].cost = cost;\r\n      tempMat[lastIndex].volume = volume;\r\n      tempMat[lastIndex].date = date;\r\n      tempMat[lastIndex].color = color;\r\n\r\n      const tempMatItem = document.getElementById(`mterialItem${lastIndex}`);\r\n      tempMatItem.style.background = \"\";\r\n\r\n      if (lastCost !== null && lastCost !== cost) {\r\n        let lastCo = lastCost;\r\n        let curCo = cost;\r\n        negateTotalCost(curCo, lastCo);\r\n      }\r\n      emptyFields();\r\n    } else {\r\n      setOpen(true);\r\n    }\r\n  };\r\n\r\n  //close the dialog box if it is already opened.\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //update total cost when the information of a material is edited.\r\n  const negateTotalCost = (cost, lastCost) => {\r\n    let tempcost = subtractTotalCost(totalCost, lastCost);\r\n    console.log(\"Current totalcost\", tempcost);\r\n    addTotalCost(tempcost, cost);\r\n  };\r\n\r\n  //add a value(cost) to total cost when an item is added to the list of materials.\r\n  const addTotalCost = (totalCost, cost) => {\r\n    setTotalCost(\r\n      (parseFloat(totalCost) + parseFloat(cost)).toFixed(\r\n        Math.max(\r\n          cost.split(\".\")[1]?.length ? cost.split(\".\")[1].length : 0,\r\n          totalCost.toString().split(\".\")[1]?.length\r\n            ? totalCost.toString().split(\".\")[1].length\r\n            : 0\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  //delete a material from the list of materials and subtract the corresponding cost from\r\n  //total cost. if an item was selected, the background color will be removed.\r\n  const deleteMaterialItem = (index) => {\r\n    let tempMaterial = [...material];\r\n    let tempcost = subtractTotalCost(totalCost, tempMaterial[index].cost);\r\n    setTotalCost(tempcost);\r\n    tempMaterial.splice(index, 1);\r\n    setMaterial(tempMaterial);\r\n    emptyFields();\r\n    if (lastIndex !== null) {\r\n      const tempMatItem = document.getElementById(`mterialItem${lastIndex}`);\r\n      tempMatItem.style.background = \"\";\r\n    }\r\n  };\r\n  //subtract a value(currentCost) from total cost when an item is eliminated from the list of materials.\r\n  const subtractTotalCost = (totalCost, currentCost) => {\r\n    let tempcost = (parseFloat(totalCost) - parseFloat(currentCost)).toFixed(\r\n      Math.max(\r\n        currentCost.split(\".\")[1]?.length\r\n          ? currentCost.split(\".\")[1].length\r\n          : 0,\r\n        totalCost.toString().split(\".\")[1]?.length\r\n          ? totalCost.toString().split(\".\")[1].length\r\n          : 0\r\n      )\r\n    );\r\n    tempcost = parseFloat(tempcost.toString());\r\n    return tempcost;\r\n  };\r\n\r\n  //when an item is selected, the backgroung color of the item is changed and the value of\r\n  //material name, cost, volume, color, and date for a specific index that is already sent\r\n  //to the function, are kept in the corresponding states and accordingly they are shown\r\n  //in the fields of material form. lastindex is set to show that an item is selected and if\r\n  //a user clicks on \"Add\" button, no new item will be added unless \"Edit\" button is clicked\r\n  //and everything returns to its normal state.\r\n  const editMaterialContent = (index) => {\r\n    if (lastIndex !== null) {\r\n      const tempMat = document.getElementById(`mterialItem${lastIndex}`);\r\n      tempMat.style.backgroundColor = \"\";\r\n    }\r\n\r\n    let tempMaterial = [...material];\r\n    let tempLastMaterial = [...material];\r\n    setMaterialName(tempMaterial[index].name);\r\n    setCost(tempMaterial[index].cost);\r\n    setLastCost(tempLastMaterial[index].cost);\r\n    setVolume(tempMaterial[index].volume);\r\n    setDate(tempMaterial[index].date);\r\n    setColor(tempMaterial[index].color);\r\n    const tempMat = document.getElementById(`mterialItem${index}`);\r\n    tempMat.style.backgroundColor = \"#b2b4be\";\r\n    changeLastIndex(index);\r\n  };\r\n\r\n  //last index is set\r\n  const changeLastIndex = (index) => {\r\n    setLastIndex(index);\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <AllContainer>\r\n        {/* Total Cost */}\r\n        <CostReport>\r\n          <CostText>Total Cost:</CostText>\r\n          <Cost>{totalCost}</Cost>\r\n        </CostReport>\r\n        <MainContent>\r\n          <MaterialContainer>\r\n            <Materials>\r\n              <MaterialList>\r\n                {/* Material Items */}\r\n                {material.map((item, key) => (\r\n                  <MaterialItem key={key} id={`mterialItem${key}`}>\r\n                    <MaterialColorContainer\r\n                      onClick={() => editMaterialContent(key)}\r\n                    >\r\n                      <MaterialItemsColor\r\n                        style={{ backgroundColor: item.color }}\r\n                      />\r\n                      {/* {item.color} */}\r\n                    </MaterialColorContainer>\r\n                    <MaterialNameContainer\r\n                      onClick={() => editMaterialContent(key)}\r\n                    >\r\n                      {item.name}\r\n                    </MaterialNameContainer>\r\n                    <MaterialVolumeContainer\r\n                      onClick={() => editMaterialContent(key)}\r\n                    >\r\n                      {item.volume}\r\n                    </MaterialVolumeContainer>\r\n                    <DeleteContainer>\r\n                      <DeleteIcon\r\n                        onClick={() => deleteMaterialItem(key)}\r\n                        key={key}\r\n                        id={`delete${key}`}\r\n                      />\r\n                    </DeleteContainer>\r\n                  </MaterialItem>\r\n                ))}\r\n              </MaterialList>\r\n            </Materials>\r\n            <ButtonContainer>\r\n              {/* Edit Button */}\r\n              <Tooltip title=\"Edit\" placement=\"bottom-end\">\r\n                <AddEditMaterial onClick={() => editItems()}>\r\n                  <SwapHorizontalCircleRoundedIcon />\r\n                </AddEditMaterial>\r\n              </Tooltip>\r\n              {/* Add Button */}\r\n              <Tooltip title=\"Add\" placement=\"bottom-end\">\r\n                <AddEditMaterial onClick={() => addItems()}>\r\n                  <AddCircleIcon />\r\n                </AddEditMaterial>\r\n              </Tooltip>\r\n            </ButtonContainer>\r\n          </MaterialContainer>\r\n          {/* Material Form */}\r\n          <MaterialForm>\r\n            {/* Name Field */}\r\n            <StyledTextField\r\n              id=\"material-name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              onChange={(e) => setMaterialName(e.target.value)}\r\n              value={materialName}\r\n            />\r\n            {/* Volume Field */}\r\n            <StyledTextField\r\n              id=\"material-volume\"\r\n              label=\"Volume\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(e) => setVolume(e.target.value)}\r\n              value={volume}\r\n            />\r\n            {/* Cost Field */}\r\n            <StyledTextField\r\n              id=\"material-cost\"\r\n              label=\"Cost\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(e) => setCost(e.target.value)}\r\n              value={cost}\r\n            />\r\n            {/* Date Field */}\r\n            <StyledTextField\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              id=\"material-cost\"\r\n              label=\"Delivery Date\"\r\n              variant=\"outlined\"\r\n              type=\"date\"\r\n              onChange={(e) => setDate(e.target.value)}\r\n              value={date}\r\n            />\r\n            {/* Color Palette */}\r\n            <ColorPalleteButtonContainer>\r\n              <ColorPalleteInnerButtonContainer>\r\n                <ColorPallete\r\n                  type=\"color\"\r\n                  id=\"colorPallete\"\r\n                  onChange={(e) => setColor(e.target.value)}\r\n                />\r\n                <Tooltip title=\"Color\" placement=\"bottom-end\">\r\n                  <ColorPalleteButton\r\n                    style={{ backgroundColor: color, color: textColor }}\r\n                    onClick={() => colorPalleteOnload()}\r\n                  >\r\n                    {/* Color */}\r\n                    <PaletteIcon />\r\n                  </ColorPalleteButton>\r\n                </Tooltip>\r\n              </ColorPalleteInnerButtonContainer>\r\n            </ColorPalleteButtonContainer>\r\n          </MaterialForm>\r\n        </MainContent>\r\n      </AllContainer>\r\n      {/* Dialog (will be shown when no item is selected and \"Edit\" button is clicked)*/}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"No Item Is Selected!\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Please select an item from the left side pannel to edit.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default SubmitMaterial;\r\n","import \"./App.css\";\nimport styled from \"styled-components\";\nimport SubmitMaterial from \"./components/SubmitMaterial\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background: #f9f0ec;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <SubmitMaterial />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}